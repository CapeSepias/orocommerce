workflows:
    b2b_flow_checkout_single_page:
        transition_definitions:
            __start___definition:
                # perform preactions before actions defined in base_transition_definitions
                preactions:
                    - '@call_service_method':
                         service: oro_checkout.action.default_shipping_method_setter
                         method: setDefaultShippingMethod
                         method_parameters: [$checkout]

            save_state_definition:
                preactions:
                    - '@tree':
                        conditions:
                            '@feature_enabled':
                                feature: single_page_checkout_performance
                        actions:
                          - '@assign_value': [$disallow_visitor_email, true]

                actions:
                    - '@assign_value': [$.result.responseData.stateSaved, false]

                    - '@run_action_group':
                        action_group: b2b_flow_checkout_update_billing_address
                        parameters_mapping:
                            checkout: $checkout
                            disallow_shipping_address_edit: $disallow_shipping_address_edit
                        results:
                            data.billing_address_has_shipping: $.billing_address_has_shipping

                    - '@run_action_group':
                        action_group: b2b_flow_checkout_update_shipping_address
                        parameters_mapping:
                            checkout: $checkout
                            billing_address_has_shipping: $billing_address_has_shipping

                    - '@run_action_group':
                        action_group: b2b_flow_checkout_update_shipping_method
                        parameters_mapping:
                            checkout: $checkout

                    - '@tree':
                        conditions:
                            '@empty': $checkout.shippingCost
                        actions:
                            - '@unset_value': $checkout.shippingMethod
                            - '@call_service_method':
                                 service: oro_checkout.action.default_shipping_method_setter
                                 method: setDefaultShippingMethod
                                 method_parameters: [$checkout]

                    - '@flush_entity': [$checkout]

                    - '@run_action_group':
                        action_group: actualize_workflow_state
                        parameters_mapping:
                            checkout: $checkout
                            state_token: $state_token
                        results:
                            result.savedStateToken: $.state_token
                            data.internal_state_token: $.state_token

                    - '@assign_value':
                        conditions:
                            '@not_empty': $.result.savedStateToken
                        parameters: [$.result.responseData.stateSaved, true]

            create_order_transition_definition:
                preactions:
                    - '@tree':
                        conditions:
                            '@feature_enabled':
                                feature: single_page_checkout_performance
                        actions:
                           - '@assign_value': [$disallow_visitor_email, true]
                           - '@assign_value': [$billing_address_has_shipping, $ship_to_billing_address]

                    - '@tree':
                        conditions:
                            '@empty': $billing_address
                        actions:
                            - '@call_service_method':
                                attribute: $.result.customerUserAddresses
                                service: 'oro_order.manager.order_address'
                                method: getGroupedAddresses
                                method_parameters: [$checkout, 'billing']
                            - '@call_service_method':
                                attribute: $billing_address
                                service: 'oro_order.manager.order_address'
                                method: updateFromAbstract
                                method_parameters: [$.result.customerUserAddresses.defaultAddress]
                    - '@tree':
                        conditions:
                            '@empty': $shipping_address
                        actions:
                            - '@call_service_method':
                                attribute: $.result.customerUserAddresses
                                service: 'oro_order.manager.order_address'
                                method: getGroupedAddresses
                                method_parameters: [$checkout, 'shipping']
                            - '@call_service_method':
                                attribute: $shipping_address
                                service: 'oro_order.manager.order_address'
                                method: updateFromAbstract
                                method_parameters: [$.result.customerUserAddresses.defaultAddress]

                    - '@run_action_group':
                        action_group: b2b_flow_checkout_update_billing_address
                        parameters_mapping:
                            checkout: $checkout
                            disallow_shipping_address_edit: $disallow_shipping_address_edit
                        results:
                            data.billing_address_has_shipping: $.billing_address_has_shipping

                    - '@run_action_group':
                        action_group: b2b_flow_checkout_update_shipping_address
                        parameters_mapping:
                            checkout: $checkout
                            billing_address_has_shipping: $billing_address_has_shipping

                    - '@run_action_group':
                        action_group: oro_update_shipping_price
                        parameters_mapping:
                            checkout: $checkout

                    - '@call_service_method':
                        service: oro_checkout.action.default_shipping_method_setter
                        method: setDefaultShippingMethod
                        method_parameters: [$checkout]

                    - '@call_service_method':
                        service: oro_checkout.factory.shipping_context_factory
                        method: create
                        method_parameters: [$checkout]
                        attribute: $.result.shippingContext

                    - '@call_service_method':
                        service: oro_checkout.factory.payment_context_factory
                        method: create
                        method_parameters: [$checkout]
                        attribute: $.result.paymentContext

                    - '@generate_checkout_state_snapshot':
                        entity: $checkout
                        attribute: $.result.currentCheckoutState
                    - '@get_checkout_state':
                        entity: $checkout
                        token: $state_token
                        attribute: $.result.savedCheckoutState

                    - '@flash_message':
                        conditions:
                            '@and':
                                - '@equal': [$payment_in_progress, true]
                                - '@equal': [$checkout.completed, false]
                                - '@check_request':
                                    parameters:
                                        is_ajax: false

                        message: oro.checkout.workflow.condition.payment_has_not_been_processed.message
                        type: 'warning'

                    - '@assign_url':
                        attribute: $.result.saveStateUrl
                        route: oro_checkout_frontend_checkout
                        route_parameters:
                            id: $checkout.id
                            transition: 'save_state'

                    - '@flush_entity': $checkout

                    - '@run_action_group':
                        action_group: b2b_flow_checkout_create_guest_customer_user
                        parameters_mapping:
                            checkout: $checkout

                preconditions:
                    '@and':
                        - '@equal': [$checkout.completed, false]
                        - '@quote_acceptable': [$checkout.sourceEntity, true]
                        - '@extendable':
                            events: [extendable_condition.checkout]
                        - '@order_line_item_has_count': $checkout
                        - '@shipping_method_has_enabled_shipping_rules':
                            message: oro.checkout.workflow.condition.shipping_method_is_not_available.message
                            method_identifier: $checkout.shippingMethod
                            context: $.result.paymentContext

                conditions:
                    '@and':
                        - '@or':
                            - '@empty': $.result.savedCheckoutState
                            - '@check_checkout_states':
                                message: oro.checkout.workflow.condition.content_of_order_was_changed.message
                                parameters:
                                    entity: $checkout
                                    state1: $.result.currentCheckoutState
                                    state2: $.result.savedCheckoutState
                        - '@validate_checkout_addresses':
                            parameters: $checkout
                        - '@not_empty':
                            message: Payment method was not selected
                            parameters: $checkout.paymentMethod
                        - '@payment_method_applicable':
                            message: oro.checkout.workflow.condition.payment_method_is_not_applicable.message
                            payment_method: $checkout.paymentMethod
                            context: $.result.paymentContext
                        - '@check_request':
                            message: Invalid request
                            parameters:
                                is_ajax: true
                                expected_key: _wid
                                expected_value: ajax_checkout

                        - '@extendable':
                            message: 'oro.checkout.workflow.b2b_flow_checkout.transition.place_order.condition.extendable.message'
                            events: ['extendable_condition.before_order_create']

                actions:
                    - '@run_action_group':
                        action_group: b2b_flow_checkout_update_shipping_method
                        parameters_mapping:
                            checkout: $checkout

                    - '@run_action_group':
                        action_group: b2b_flow_checkout_place_order
                        parameters_mapping:
                            checkout: $checkout
                        results:
                            data.order: $.order

                    - '@assign_value': [$payment_in_progress, true]

                    - '@assign_constant_value': [$.result.validateAction, Oro\Bundle\PaymentBundle\Method\PaymentMethodInterface::VALIDATE]
                    - '@tree':
                        conditions:
                            '@payment_method_supports':
                                payment_method: $checkout.paymentMethod
                                action: $.result.validateAction
                        actions:
                             # validate payment
                            - '@assign_url':
                                attribute: $.result.successUrl
                                route: oro_checkout_frontend_checkout
                                route_parameters:
                                    id: $checkout.id
                                    transition: 'finish_checkout'
                            - '@assign_url':
                                attribute: $.result.failureUrl
                                route: oro_checkout_frontend_checkout
                                route_parameters:
                                    id: $checkout.id
                                    transition: 'payment_error'

                            - '@payment_validate':
                                attribute: $.result.responseData
                                object: $checkout
                                paymentMethod: $checkout.paymentMethod
                                transactionOptions:
                                    saveForLaterUse: $payment_save_for_later
                                    successUrl: $.result.successUrl
                                    failureUrl: $.result.failureUrl
                                    additionalData: $additional_data
                                    checkoutId: $checkout.id

                    - '@tree':
                        conditions:
                            '@or':
                                - '@not':
                                    - '@payment_method_supports':
                                        payment_method: $checkout.paymentMethod
                                        action: $.result.validateAction
                                - '@equal':
                                    - true
                                    - $.result.responseData[successful]
                        actions:
                            # purchase, validation not supported
                            - '@run_action_group':
                                action_group: b2b_flow_checkout_purchase
                                parameters_mapping:
                                    checkout: $checkout
                                    order: $order
                                    transactionOptions:
                                        additionalData: $additional_data
                                results:
                                    result.responseData: $.responseData

                            - '@extendable':
                                events: [extendable_action.finish_checkout]

                    - '@run_action_group':
                        action_group: b2b_flow_checkout_update_guest_customer_user
                        parameters_mapping:
                            checkout: $checkout
                            visitor_email: $visitor_email
                            billing_address: $billing_address

                    - '@redirect':
                        conditions:
                            '@equal':
                                - true
                                - $.result.responseData[purchaseSuccessful]
                        route: oro_checkout_frontend_checkout
                        route_parameters:
                            id: $checkout.id
                            transition: 'finish_checkout'

                    - '@redirect':
                        conditions:
                            '@equal':
                                - false
                                - $.result.responseData[purchaseSuccessful]
                        route: oro_checkout_frontend_checkout
                        route_parameters:
                            id: $checkout.id
                            transition: payment_error

                    - '@run_action_group':
                        action_group: actualize_workflow_state
                        parameters_mapping:
                            checkout: $checkout
                            state_token: $state_token
                        results:
                            data.internal_state_token: $.state_token
                            result.savedCheckoutState: $.currentCheckoutState

            finish_checkout_definition:
                conditions:
                    '@and':
                        - '@not_empty': [$order]
                        - '@equal': [$payment_in_progress, true]
                actions:
                    - '@run_action_group':
                        action_group: b2b_flow_checkout_finish_checkout
                        parameters_mapping:
                            checkout: $checkout
                            order: $order
                            auto_remove_source: $auto_remove_source
                            allow_manual_source_remove: $allow_manual_source_remove
                            remove_source: $remove_source
